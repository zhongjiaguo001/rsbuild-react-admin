/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'

// Create Virtual Routes

const LoginIndexLazyImport = createFileRoute('/login/')()
const AppIndexLazyImport = createFileRoute('/_app/')()
const AppSettingsIndexLazyImport = createFileRoute('/_app/settings/')()
const AppContactIndexLazyImport = createFileRoute('/_app/contact/')()
const AppChatIndexLazyImport = createFileRoute('/_app/chat/')()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const AppIndexLazyRoute = AppIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))

const AppSettingsIndexLazyRoute = AppSettingsIndexLazyImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/index.lazy').then((d) => d.Route),
)

const AppContactIndexLazyRoute = AppContactIndexLazyImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/contact/index.lazy').then((d) => d.Route),
)

const AppChatIndexLazyRoute = AppChatIndexLazyImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/chat/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app/chat/': {
      id: '/_app/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AppChatIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/contact/': {
      id: '/_app/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AppContactIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/': {
      id: '/_app/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsIndexLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexLazyRoute: typeof AppIndexLazyRoute
  AppChatIndexLazyRoute: typeof AppChatIndexLazyRoute
  AppContactIndexLazyRoute: typeof AppContactIndexLazyRoute
  AppSettingsIndexLazyRoute: typeof AppSettingsIndexLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexLazyRoute: AppIndexLazyRoute,
  AppChatIndexLazyRoute: AppChatIndexLazyRoute,
  AppContactIndexLazyRoute: AppContactIndexLazyRoute,
  AppSettingsIndexLazyRoute: AppSettingsIndexLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/': typeof AppIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/chat': typeof AppChatIndexLazyRoute
  '/contact': typeof AppContactIndexLazyRoute
  '/settings': typeof AppSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/chat': typeof AppChatIndexLazyRoute
  '/contact': typeof AppContactIndexLazyRoute
  '/settings': typeof AppSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/': typeof AppIndexLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/_app/chat/': typeof AppChatIndexLazyRoute
  '/_app/contact/': typeof AppContactIndexLazyRoute
  '/_app/settings/': typeof AppSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/login' | '/chat' | '/contact' | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/chat' | '/contact' | '/settings'
  id:
    | '__root__'
    | '/_app'
    | '/_app/'
    | '/login/'
    | '/_app/chat/'
    | '/_app/contact/'
    | '/_app/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login/"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/chat/",
        "/_app/contact/",
        "/_app/settings/"
      ]
    },
    "/_app/": {
      "filePath": "_app/index.lazy.tsx",
      "parent": "/_app"
    },
    "/login/": {
      "filePath": "login/index.lazy.tsx"
    },
    "/_app/chat/": {
      "filePath": "_app/chat/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/contact/": {
      "filePath": "_app/contact/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/settings/": {
      "filePath": "_app/settings/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
