/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutChatImport } from './routes/_layout/chat'

// Create Virtual Routes

const LoginIndexLazyImport = createFileRoute('/login/')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutSystemUserIndexLazyImport = createFileRoute(
  '/_layout/system/user/',
)()
const LayoutSystemRoleIndexLazyImport = createFileRoute(
  '/_layout/system/role/',
)()
const LayoutSystemMenuIndexLazyImport = createFileRoute(
  '/_layout/system/menu/',
)()
const LayoutSystemUserProfileLazyImport = createFileRoute(
  '/_layout/system/user/profile',
)()
const LayoutSystemUserAuthRoleIdLazyImport = createFileRoute(
  '/_layout/system/user/auth-role/$id',
)()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutChatRoute = LayoutChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSystemUserIndexLazyRoute = LayoutSystemUserIndexLazyImport.update({
  id: '/system/user/',
  path: '/system/user/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/system/user/index.lazy').then((d) => d.Route),
)

const LayoutSystemRoleIndexLazyRoute = LayoutSystemRoleIndexLazyImport.update({
  id: '/system/role/',
  path: '/system/role/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/system/role/index.lazy').then((d) => d.Route),
)

const LayoutSystemMenuIndexLazyRoute = LayoutSystemMenuIndexLazyImport.update({
  id: '/system/menu/',
  path: '/system/menu/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/system/menu/index.lazy').then((d) => d.Route),
)

const LayoutSystemUserProfileLazyRoute =
  LayoutSystemUserProfileLazyImport.update({
    id: '/system/user/profile',
    path: '/system/user/profile',
    getParentRoute: () => LayoutRoute,
  } as any).lazy(() =>
    import('./routes/_layout/system/user/profile.lazy').then((d) => d.Route),
  )

const LayoutSystemUserAuthRoleIdLazyRoute =
  LayoutSystemUserAuthRoleIdLazyImport.update({
    id: '/system/user/auth-role/$id',
    path: '/system/user/auth-role/$id',
    getParentRoute: () => LayoutRoute,
  } as any).lazy(() =>
    import('./routes/_layout/system/user/auth-role.$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/chat': {
      id: '/_layout/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof LayoutChatImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/system/user/profile': {
      id: '/_layout/system/user/profile'
      path: '/system/user/profile'
      fullPath: '/system/user/profile'
      preLoaderRoute: typeof LayoutSystemUserProfileLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/system/menu/': {
      id: '/_layout/system/menu/'
      path: '/system/menu'
      fullPath: '/system/menu'
      preLoaderRoute: typeof LayoutSystemMenuIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/system/role/': {
      id: '/_layout/system/role/'
      path: '/system/role'
      fullPath: '/system/role'
      preLoaderRoute: typeof LayoutSystemRoleIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/system/user/': {
      id: '/_layout/system/user/'
      path: '/system/user'
      fullPath: '/system/user'
      preLoaderRoute: typeof LayoutSystemUserIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/system/user/auth-role/$id': {
      id: '/_layout/system/user/auth-role/$id'
      path: '/system/user/auth-role/$id'
      fullPath: '/system/user/auth-role/$id'
      preLoaderRoute: typeof LayoutSystemUserAuthRoleIdLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutChatRoute: typeof LayoutChatRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
  LayoutSystemUserProfileLazyRoute: typeof LayoutSystemUserProfileLazyRoute
  LayoutSystemMenuIndexLazyRoute: typeof LayoutSystemMenuIndexLazyRoute
  LayoutSystemRoleIndexLazyRoute: typeof LayoutSystemRoleIndexLazyRoute
  LayoutSystemUserIndexLazyRoute: typeof LayoutSystemUserIndexLazyRoute
  LayoutSystemUserAuthRoleIdLazyRoute: typeof LayoutSystemUserAuthRoleIdLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutChatRoute: LayoutChatRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
  LayoutSystemUserProfileLazyRoute: LayoutSystemUserProfileLazyRoute,
  LayoutSystemMenuIndexLazyRoute: LayoutSystemMenuIndexLazyRoute,
  LayoutSystemRoleIndexLazyRoute: LayoutSystemRoleIndexLazyRoute,
  LayoutSystemUserIndexLazyRoute: LayoutSystemUserIndexLazyRoute,
  LayoutSystemUserAuthRoleIdLazyRoute: LayoutSystemUserAuthRoleIdLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/chat': typeof LayoutChatRoute
  '/': typeof LayoutIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/system/user/profile': typeof LayoutSystemUserProfileLazyRoute
  '/system/menu': typeof LayoutSystemMenuIndexLazyRoute
  '/system/role': typeof LayoutSystemRoleIndexLazyRoute
  '/system/user': typeof LayoutSystemUserIndexLazyRoute
  '/system/user/auth-role/$id': typeof LayoutSystemUserAuthRoleIdLazyRoute
}

export interface FileRoutesByTo {
  '/chat': typeof LayoutChatRoute
  '/': typeof LayoutIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/system/user/profile': typeof LayoutSystemUserProfileLazyRoute
  '/system/menu': typeof LayoutSystemMenuIndexLazyRoute
  '/system/role': typeof LayoutSystemRoleIndexLazyRoute
  '/system/user': typeof LayoutSystemUserIndexLazyRoute
  '/system/user/auth-role/$id': typeof LayoutSystemUserAuthRoleIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/chat': typeof LayoutChatRoute
  '/_layout/': typeof LayoutIndexLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/_layout/system/user/profile': typeof LayoutSystemUserProfileLazyRoute
  '/_layout/system/menu/': typeof LayoutSystemMenuIndexLazyRoute
  '/_layout/system/role/': typeof LayoutSystemRoleIndexLazyRoute
  '/_layout/system/user/': typeof LayoutSystemUserIndexLazyRoute
  '/_layout/system/user/auth-role/$id': typeof LayoutSystemUserAuthRoleIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/chat'
    | '/'
    | '/login'
    | '/system/user/profile'
    | '/system/menu'
    | '/system/role'
    | '/system/user'
    | '/system/user/auth-role/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/chat'
    | '/'
    | '/login'
    | '/system/user/profile'
    | '/system/menu'
    | '/system/role'
    | '/system/user'
    | '/system/user/auth-role/$id'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/chat'
    | '/_layout/'
    | '/login/'
    | '/_layout/system/user/profile'
    | '/_layout/system/menu/'
    | '/_layout/system/role/'
    | '/_layout/system/user/'
    | '/_layout/system/user/auth-role/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/chat",
        "/_layout/",
        "/_layout/system/user/profile",
        "/_layout/system/menu/",
        "/_layout/system/role/",
        "/_layout/system/user/",
        "/_layout/system/user/auth-role/$id"
      ]
    },
    "/_layout/chat": {
      "filePath": "_layout/chat.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/login/": {
      "filePath": "login/index.lazy.tsx"
    },
    "/_layout/system/user/profile": {
      "filePath": "_layout/system/user/profile.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/system/menu/": {
      "filePath": "_layout/system/menu/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/system/role/": {
      "filePath": "_layout/system/role/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/system/user/": {
      "filePath": "_layout/system/user/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/system/user/auth-role/$id": {
      "filePath": "_layout/system/user/auth-role.$id.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
